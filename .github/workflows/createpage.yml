name: Deploy StockHome to GitHub Pages

on:
  workflow_dispatch:
  schedule:
    - cron: '15 14 * * 1-5'   # ~06:15 PT on weekdays â€” adjust as needed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Environment debug (pre-setup)
        run: |
          set -euxo pipefail
          echo "=== RUNNER ENV ==="
          uname -a || true
          lsb_release -a || true
          echo "PWD: $(pwd)"
          echo "Repo root listing:"
          ls -la
          echo "Git status:"
          git status -sb || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -V
          pip -V
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "=== Installed packages ==="
          pip freeze | sed -n '1,120p'

      - name: Run trading job (generate signals.json)
        env:
            API_KEY: ${{ secrets.API_KEY }}
        run: |
          set -euxo pipefail
          mkdir -p data
          # IMPORTANT: your_script.py should only write data/signals.json (not index.html)
          Signal.py
          echo "=== data/ listing ==="
          ls -la data || true
          test -f data/signals.json

      - name: Inspect signals.json (debug)
        run: |
          set -euxo pipefail
          echo "=== signals.json HEAD ==="
          head -c 500 data/signals.json || true
          echo
          echo "=== signals.json size & checksum ==="
          wc -c data/signals.json
          sha256sum data/signals.json

      - name: Assemble site (keep layout unchanged)
        run: |
          set -euxo pipefail
          mkdir -p public
          # Copy static shell & assets
          cp index.html public/
          rsync -a --mkpath styles/ public/styles/ || true
          rsync -a --mkpath scripts/ public/scripts/ || true
          rsync -a --mkpath assets/ public/assets/ || true
          # Copy generated data
          mkdir -p public/data
          cp data/signals.json public/data/signals.json

      - name: Debug assembled site
        run: |
          set -euxo pipefail
          echo "=== public/ tree ==="
          find public -maxdepth 3 -type f -print | sort
          echo "=== index.html HEAD ==="
          sed -n '1,120p' public/index.html || true
          echo "=== app.js HEAD (if exists) ==="
          sed -n '1,120p' public/scripts/app.js || true
          echo "=== Verify signals path referenced relatively in index.html ==="
          grep -n "data/signals.json" -n public/index.html || true
          echo "=== Try parsing signals.json ==="
          python - <<'PY'
import json,sys
p='public/data/signals.json'
with open(p,'r',encoding='utf-8') as f:
    data=json.load(f)
print('keys:', list(data.keys())[:10])
print('buys:', len(data.get('buys_html', [])))
print('sells:', len(data.get('sells_html', [])))
PY

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
